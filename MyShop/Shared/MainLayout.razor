@using System.Security.Claims;
@using MyShop.Entities;
@inherits LayoutComponentBase

<PageTitle>ShopApp.Web</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @if (!_isAuthenticated)
            {
                <div class="btn-group">
                    <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background-color: rgb(105,102,219)">
                        <i class="bi bi-person-circle"></i> Guest
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        <a class="dropdown-item" href="/identity/account/login" style="margin: 0px">Login</a>
                        <a class="dropdown-item" href="/identity/account/register" style="margin: 0px">Register</a>
                    </div>
                </div>
                <a href="identity/account/login" class="btn custom-button" type="button" aria-haspopup="true" aria-expanded="false">
                    <i class="bi bi-basket"></i>
                </a>
            }
            else
            {

                <div class="btn-group">
                    <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background-color: rgb(105,102,219)">
                        <i class="bi bi-person-circle"></i> @userName
                    </button>
                    <div class="dropdown-menu dropdown-menu-right">
                        <a class="dropdown-item" href="/identity/account/logout" style="margin: 0px">Logout</a>
                    </div>
                </div>
                <a href="Cart" class="btn custom-button" type="button" aria-haspopup="true" aria-expanded="false">
                    <i class="bi bi-basket"></i>
                </a>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<RadzenContextMenu />
<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />

@code {

    [CascadingParameter]
    public Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    private bool _isAuthenticated = false;

    string? userName;

    //za login
    private bool isDialogOpen = false;
    LoginModel loginModel = new LoginModel();

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationStateTask is null)
        {
            return;
        }

        var authState = await AuthenticationStateTask;
        var user = authState.User;
        userName = user.Identity.Name;

        _isAuthenticated = user.Identity.IsAuthenticated;
    }

    void ShowLogin()
    {
        isDialogOpen = true;
    }

    void OnLogin(LoginArgs args, string name)
    {
        
    }

    void OnRegister(string name)
    {
        
    }
}